// Code generated by MockGen. DO NOT EDIT.
// Source: id.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIder is a mock of Ider interface.
type MockIder struct {
	ctrl     *gomock.Controller
	recorder *MockIderMockRecorder
}

// MockIderMockRecorder is the mock recorder for MockIder.
type MockIderMockRecorder struct {
	mock *MockIder
}

// NewMockIder creates a new mock instance.
func NewMockIder(ctrl *gomock.Controller) *MockIder {
	mock := &MockIder{ctrl: ctrl}
	mock.recorder = &MockIderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIder) EXPECT() *MockIderMockRecorder {
	return m.recorder
}

// Id mocks base method.
func (m *MockIder) Id() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Id")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Id indicates an expected call of Id.
func (mr *MockIderMockRecorder) Id() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Id", reflect.TypeOf((*MockIder)(nil).Id))
}
