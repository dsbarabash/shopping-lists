// Code generated by MockGen. DO NOT EDIT.
// Source: time.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// MockTimeNower is a mock of TimeNower interface.
type MockTimeNower struct {
	ctrl     *gomock.Controller
	recorder *MockTimeNowerMockRecorder
}

// MockTimeNowerMockRecorder is the mock recorder for MockTimeNower.
type MockTimeNowerMockRecorder struct {
	mock *MockTimeNower
}

// NewMockTimeNower creates a new mock instance.
func NewMockTimeNower(ctrl *gomock.Controller) *MockTimeNower {
	mock := &MockTimeNower{ctrl: ctrl}
	mock.recorder = &MockTimeNowerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTimeNower) EXPECT() *MockTimeNowerMockRecorder {
	return m.recorder
}

// Now mocks base method.
func (m *MockTimeNower) Now() *timestamppb.Timestamp {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(*timestamppb.Timestamp)
	return ret0
}

// Now indicates an expected call of Now.
func (mr *MockTimeNowerMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockTimeNower)(nil).Now))
}
